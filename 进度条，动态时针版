#!/bin/bash
#定义一个显示进度的函数，屏幕快速显示| / - \
rotate_line(){
INTERVAL=0.1                  #设置间隔时间
COUNT='0'                     #设置4个形状的编号，默认编号为0（不代表任何图像）
while :
do
COUNT=`expr $COUNT + 1`      #执行循环，COUNT每次循环加1，分别代表4中不同的形状
case $COUNT in               #判断COUNT的值，值不一样显示的形状就不一样
"1")                         #值为1时显示-
 echo -e '-'"\b\c"
 sleep $INTERVAL
 ;;
"2")                        #值为2时显示\\,第一个\是转义
 echo -e '\\'"\b\c"
 sleep $INTERVAL
 ;;
"3")                       #值为3时显示|
  echo -e "|\b\c"
  sleep $INTERVAL
 ;;
"4")                       #值为4时显示/
  echo -e "/\b\c"
  sleep $INTERVAL
 ;;
*)                         #为其他值时，将COUNT重值为0
  COUNT="0";;
 esac
done
}
rotate_line
#####################################################################
eg:echo -n 不换行输出

    $echo -n "123"
    $echo "456"

    最终输出 
    123456
     
    而不是
    123
    456

echo -e 处理特殊字符

若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出： 
\a 发出警告声； 
\b 删除前一个字符； 
\c 最后不加上换行符号； 
\f 换行但光标仍旧停留在原来的位置； 
\n 换行且光标移至行首； 
\r 光标移至行首，但不换行； 
\t 插入tab； 
\v 与\f相同； 
\ 插入\字符； 
\nnn 插入nnn（八进制）所代表的ASCII字符；

    $echo -e "a\bdddd"
    dddd

    $echo -e "a\adddd" //输出同时会发出报警声音
    adddd

    $echo -e "a\ndddd" //自动换行
    a
    dddd
  ########################################################
  expr命令一般用于整数值，但也可用于字符串。一般格式为：
expr argument operator argument
expr也是一个手工命令行计数器。
例子：
 
复制代码 代码示例:

$expr 10 + 10
20

$expr 1500 + 900
2500

$expr 30 / 3
10

$expr 30 / 3 / 2
5


(注意运算符左右都有空格)

使用乘号时，必须用反斜线屏蔽其特定含义。因为shell可能会误解显示星号的意义。
 
复制代码 代码示例:
$expr 30 * 3
90

1、增量计数
expr在循环中用于增量计算。首先，循环初始化为0，然后循环值加1，反引号的用法意
即替代命令。最基本的一种是从（expr）命令接受输出并将之放入循环变量。
 
复制代码 代码示例:
$LOOP=0
$LOOP=`expr $LOOP + 1`

2、数值测试
可以用expr测试一个数。如果试图计算非整数，将返回错误。
 
复制代码 代码示例:
$rr=1.1
$expr $rr + 1
expr: non-numeric argument
$rr=2
$expr $rr + 1
3


(注意：这个例子与原文不同)
这里需要将一个值赋予变量（不管其内容如何），进行数值运算，并将输出导入dev/null，
然后测试最后命令状态，如果为0，证明这是一个数，其他则表明为非数值。
 
复制代码 代码示例:
$value=12
$expr $value + 10 > /dev/null 2>&1
$echo $?
0


这是一个数。
 
复制代码 代码示例:
$value=hello
$expr $value + 10 > /dev/null 2>&1
$echo $?
2


这是一个非数值字符。

expr也可以返回其本身的退出状态，不幸的是返回值与系统最后退出命令刚好相反，成
功返回1，任何其他值为无效或错误。下面的例子测试两个字符串是否相等，这里字符串为
“hello”和“hello”。
 
复制代码 代码示例:
$value=hello
$expr $value = "hello"
1
$echo $?
0
 

expr返回1。不要混淆了，这表明成功。现在检验其最后退出状态，返回0表示测试成功，
“hello”确实等于“hello”。

3、模式匹配
expr也有模式匹配功能。可以使用expr通过指定冒号选项计算字符串中字符数。.*意即任
何字符重复0次或多次。
 
复制代码 代码示例:
$value=accounts.doc
$expr $value : '.*'
12

在expr中可以使用字符串匹配操作，这里使用模式. d o c抽取文件附属名。
 
复制代码 代码示例:
$expr $value : '(.*).doc'
accounts

